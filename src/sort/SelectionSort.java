package sort;

import java.util.Arrays;

public class SelectionSort {

  /*
   * Идея алгоритма сортировки выбором:
   * 1) Разбиваем массив на отсортированную и неотсортированную части.
   * 2) Находим в неотсортированной части минимальный элемент.
   * 3) Меняем его местами с тем элементом, который находится на нулевой позиции — в конец отсортированного массива.
   * 4) Далее находим следующий по величине элемент и меняем его с элементом на первой позиции, etc.,
   * пока не закончатся неотсортированные значения.
   */

  // ожидаемая скорость алгоритма в лучшем и худшем случае — Θ(n^2)
  public static void selectionSort(int[] array) {
    // 24 min, 42, 2, 4, 42, 2, 1, 6
    for (int i = 0; i < array.length; i++) {
      int indexMin = i;
      int min = array[i];
      //  цикл нахождения наименьшего элемента и его индекса
      for (int j = i + 1; j < array.length; j++) {
        if (array[j] < min) {
          indexMin = j;
          min = array[j];
        }
      }
      /* меняем минимальный элемент с элементом на нулевой позиции
       * [отсротированная часть] [неотсортированная часть] -> [min] [остальные элементы] ->
       * и далее также находим минимальный в неотсортированной части и добовляем в конец отсортированной
       */
      array[indexMin] = array[i];
      array[i] = min;
    }
  }

  public static void main(String[] args) {

    int[] array = new int[]{24, 42, 2, 4, 42, 2, 1, 6};

    selectionSort(array);

    System.out.println(Arrays.toString(array));
  }

}
